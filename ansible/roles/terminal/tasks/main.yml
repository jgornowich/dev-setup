---
- name: Install terminal tools via package manager (RHEL/Rocky/CentOS)
  ansible.builtin.dnf:
    name: "{{ terminal_packages }}"
    state: present
  become: yes
  when: ansible_os_family == "RedHat"

- name: Install terminal tools via package manager (Debian/Ubuntu)
  ansible.builtin.apt:
    name: "{{ terminal_packages }}"
    state: present
  become: yes
  when: ansible_os_family == "Debian"

- name: Install modern terminal tools from GitHub releases
  block:
    - name: Download and install btop
      block:
        - name: Download btop
          get_url:
            url: "https://github.com/aristocratos/btop/releases/download/v{{ version.btop }}/btop-x86_64-linux-musl.tbz"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/btop.tbz"
            mode: '0644'
        
        - name: Extract btop
          unarchive:
            src: "{{ ansible_env.HOME }}/Downloads/installers/btop.tbz"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/"
            remote_src: yes
        
        - name: Install btop
          copy:
            src: "{{ ansible_env.HOME }}/Downloads/installers/btop/bin/btop"
            dest: "{{ ansible_env.HOME }}/.local/bin/btop"
            mode: '0755'
            remote_src: yes

    - name: Download and install ctop
      get_url:
        url: "https://github.com/bcicen/ctop/releases/download/v{{ version.ctop }}/ctop-{{ version.ctop }}-linux-amd64"
        dest: "{{ ansible_env.HOME }}/.local/bin/ctop"
        mode: '0755'

    - name: Install cmatrix (Debian/Ubuntu)
      apt:
        name: cmatrix
        state: present
      become: yes
      when: os_family == "debian"

    - name: Install dive tool
      block:
        - name: Download dive (Debian/Ubuntu)
          get_url:
            url: "https://github.com/wagoodman/dive/releases/download/v{{ version.dive }}/dive_{{ version.dive }}_linux_amd64.deb"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/dive.deb"
            mode: '0644'
          when: os_family == "debian"

        - name: Install dive (Debian/Ubuntu)
          apt:
            deb: "{{ ansible_env.HOME }}/Downloads/installers/dive.deb"
            state: present
          become: yes
          when: os_family == "debian"

        - name: Download dive (RHEL/Rocky/CentOS)
          get_url:
            url: "https://github.com/wagoodman/dive/releases/download/v{{ version.dive }}/dive_{{ version.dive }}_linux_amd64.rpm"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/dive.rpm"
            mode: '0644'
          when: os_family == "redhat"

        - name: Install dive (RHEL/Rocky/CentOS)
          dnf:
            name: "{{ ansible_env.HOME }}/Downloads/installers/dive.rpm"
            state: present
            disable_gpg_check: yes
          become: yes
          when: os_family == "redhat"
      when: install_dive

    - name: Download and install fd-find
      block:
        - name: Download fd-find
          get_url:
            url: "https://github.com/sharkdp/fd/releases/download/v{{ version.fd }}/fd-v{{ version.fd }}-x86_64-unknown-linux-gnu.tar.gz"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/fd.tar.gz"
            mode: '0644'
        
        - name: Extract fd-find
          unarchive:
            src: "{{ ansible_env.HOME }}/Downloads/installers/fd.tar.gz"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/"
            remote_src: yes
        
        - name: Install fd-find
          copy:
            src: "{{ ansible_env.HOME }}/Downloads/installers/fd-v{{ version.fd }}-x86_64-unknown-linux-gnu/fd"
            dest: "{{ ansible_env.HOME }}/.local/bin/fd"
            mode: '0755'
            remote_src: yes

    - name: Download and install fastfetch
      block:
        - name: Download fastfetch
          get_url:
            url: "https://github.com/fastfetch-cli/fastfetch/releases/download/{{ version.fastfetch }}/fastfetch-linux-amd64.tar.gz"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/fastfetch.tar.gz"
            mode: '0644'
        
        - name: Extract fastfetch
          unarchive:
            src: "{{ ansible_env.HOME }}/Downloads/installers/fastfetch.tar.gz"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/"
            remote_src: yes
        
        - name: Install fastfetch
          copy:
            src: "{{ ansible_env.HOME }}/Downloads/installers/fastfetch-linux-amd64/usr/bin/fastfetch"
            dest: "{{ ansible_env.HOME }}/.local/bin/fastfetch"
            mode: '0755'
            remote_src: yes

    - name: Download and install fzf
      block:
        - name: Download fzf
          get_url:
            url: "https://github.com/junegunn/fzf/releases/download/v{{ version.fzf }}/fzf-{{ version.fzf }}-linux_amd64.tar.gz"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/fzf.tar.gz"
            mode: '0644'
        
        - name: Extract fzf
          unarchive:
            src: "{{ ansible_env.HOME }}/Downloads/installers/fzf.tar.gz"
            dest: "{{ ansible_env.HOME }}/.local/bin/"
            remote_src: yes

    - name: Download and install lazydocker
      get_url:
        url: "https://github.com/jesseduffield/lazydocker/releases/download/v{{ version.lazydocker }}/lazydocker_{{ version.lazydocker }}_Linux_x86_64.tar.gz"
        dest: "{{ ansible_env.HOME }}/Downloads/installers/lazydocker.tar.gz"
        mode: '0644'

    - name: Extract lazydocker
      unarchive:
        src: "{{ ansible_env.HOME }}/Downloads/installers/lazydocker.tar.gz"
        dest: "{{ ansible_env.HOME }}/.local/bin/"
        remote_src: yes

    - name: Download and install lazygit
      get_url:
        url: "https://github.com/jesseduffield/lazygit/releases/download/v{{ version.lazygit }}/lazygit_{{ version.lazygit }}_linux_x86_64.tar.gz"
        dest: "{{ ansible_env.HOME }}/Downloads/installers/lazygit.tar.gz"
        mode: '0644'

    - name: Extract lazygit
      unarchive:
        src: "{{ ansible_env.HOME }}/Downloads/installers/lazygit.tar.gz"
        dest: "{{ ansible_env.HOME }}/.local/bin/"
        remote_src: yes

    - name: Download and install Waveterm
      block:
        - name: Download Waveterm (Debian/Ubuntu)
          get_url:
            url: "https://github.com/wavetermdev/waveterm/releases/download/v{{ version.waveterm }}/waveterm-linux-x86_64-{{ version.waveterm }}.rpm"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/waveterm.deb"
            mode: '0644'
          when: os_family == "debian"
        
        - name: Install Waveterm (Debian/Ubuntu)
          apt:
            deb: "{{ ansible_env.HOME }}/Downloads/installers/waveterm.deb"
            state: present
          become: yes
          when: os_family == "debian"
        
        - name: Download Waveterm (RHEL/Rocky/CentOS)
          get_url:
            url: "https://github.com/wavetermdev/waveterm/releases/download/v{{ version.waveterm }}/waveterm-linux-x86_64-{{ version.waveterm }}.rpm"
            dest: "{{ ansible_env.HOME }}/Downloads/installers/waveterm.rpm"
            mode: '0644'
          when: os_family == "redhat"
        
        - name: Install Waveterm (RHEL/Rocky/CentOS)
          dnf:
            name: "{{ ansible_env.HOME }}/Downloads/installers/waveterm.rpm"
            state: present
            disable_gpg_check: yes
          become: yes
          when: os_family == "redhat"

    - name: Download and install superfile (spf)
      get_url:
        url: "https://github.com/yorukot/superfile/releases/download/v{{ version.superfile }}/superfile-linux-v{{ version.superfile }}-amd64.tar.gz"
        dest: "{{ ansible_env.HOME }}/Downloads/installers/superfile.tar.gz"
        mode: '0644'

    - name: Extract superfile
      unarchive:
        src: "{{ ansible_env.HOME }}/Downloads/installers/superfile.tar.gz"
        dest: "{{ ansible_env.HOME }}/Downloads/installers/"
        remote_src: yes

    - name: Install superfile
      copy:
        src: "{{ ansible_env.HOME }}/Downloads/installers/dist/superfile-linux-v{{ version.superfile }}-amd64/spf"
        dest: "{{ ansible_env.HOME }}/.local/bin/spf"
        mode: '0755'
        remote_src: yes

    - name: Install Starship
      shell: |
        curl -sS https://starship.rs/install.sh | sh -s -- -y
      args:
        creates: "{{ ansible_env.HOME }}/.local/bin/starship"
      become: yes

    - name: Install Cascadia Code Nerd Font
      block:
        - name: Create fonts directory
          file:
            path: "{{ ansible_env.HOME }}/.local/share/fonts"
            state: directory
            mode: '0755'

        - name: Download Cascadia Code Nerd Font
          get_url:
            url: https://github.com/ryanoasis/nerd-fonts/releases/download/v{{ version.cascadia_code }}/CascadiaCode.zip
            dest: "{{ ansible_env.HOME }}/Downloads/installers/CascadiaCode.zip"
            mode: '0644'

        - name: Extract Cascadia Code Nerd Font
          unarchive:
            src: "{{ ansible_env.HOME }}/Downloads/installers/CascadiaCode.zip"
            dest: "{{ ansible_env.HOME }}/.local/share/fonts"
            remote_src: yes
            extra_opts: ["-j"]

        - name: Update font cache
          command: fc-cache -f -v
          args:
            creates: "{{ ansible_env.HOME }}/.local/share/fonts/Caskaydia Cove Nerd Font Complete Windows Compatible.ttf"
